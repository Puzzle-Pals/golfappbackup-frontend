import React, { useEffect, useState } from 'react';
import Head from 'next/head';

export default function AdminDashboard() {
  // State for form and data
  const [courses, setCourses] = useState([]);
  
  // Handle form submission
  const handleSubmit = async (e) => {
    e.preventDefault();
    const courseName = document.getElementById('courseName').value;
    
    // Gather par values from the form
    // This will depend on how your parInputs are structured
    const pars = [];
    // Your par collection logic here
    
    // Example of how you might process the form
    try {
      // Replace with your actual API endpoint
      // const response = await fetch('/api/courses', {
      //   method: 'POST',
      //   headers: { 'Content-Type': 'application/json' },
      //   body: JSON.stringify({ name: courseName, pars })
      // });
      
      // Refresh course list after adding
      fetchCourses();
      
      // Reset form
      document.getElementById('courseForm').reset();
    } catch (error) {
      console.error('Error adding course:', error);
    }
  };
  
  // Fetch courses function
  const fetchCourses = async () => {
    try {
      // Replace with your actual API call
      // const response = await fetch('/api/courses');
      // const data = await response.json();
      // setCourses(data);
      
      // For now, just simulate data
      setCourses([
        { id: 1, name: "Sample Course", pars: [4,4,3,5,4,4,3,5,4] }
      ]);
      
      // Update DOM with course data
      renderCourses();
    } catch (error) {
      console.error('Error fetching courses:', error);
    }
  };
  
  // Render courses to the DOM
  const renderCourses = () => {
    const coursesList = document.getElementById('coursesList');
    if (!coursesList) return;
    
    // Your existing rendering logic from admin.js
    // ...
  };
  
  // Generate par inputs
  const generateParInputs = () => {
    const parInputsContainer = document.getElementById('parInputs');
    if (!parInputsContainer) return;
    
    // Your existing par inputs generation logic from admin.js
    // ...
  };
  
  useEffect(() => {
    // Initialize everything when component mounts
    generateParInputs();
    fetchCourses();
    
    // Set up form submission
    const courseForm = document.getElementById('courseForm');
    if (courseForm) {
      courseForm.addEventListener('submit', handleSubmit);
    }
    
    // Cleanup function
    return () => {
      if (courseForm) {
        courseForm.removeEventListener('submit', handleSubmit);
      }
    };
  }, []);

  return (
    <>
      <Head>
        <meta charSet="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Admin - BP Golf App</title>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" />
        <link rel="stylesheet" href="styles.css" />
      </Head>
      
      <div className="container mt-4">
        <h1 className="text-center mb-4">Admin Panel</h1>
        
        <div className="card mb-4">
          <div className="card-header">
            <h3>Add New Course</h3>
          </div>
          <div className="card-body">
            <form id="courseForm">
              <div className="mb-3">
                <label htmlFor="courseName" className="form-label">Course Name</label>
                <input type="text" className="form-control" id="courseName" required />
              </div>
              <div id="parInputs">
                {/* Par inputs will be generated by JavaScript */}
              </div>
              <button type="submit" className="btn btn-primary mt-3">Add Course</button>
            </form>
          </div>
        </div>
        
        <div className="card">
          <div className="card-header">
            <h3>Current Courses</h3>
          </div>
          <div className="card-body">
            <div id="coursesList"></div>
          </div>
        </div>
      </div>
    </>
  );
}